<?php

declare(strict_types = 1);

use Rector\CodeQuality\Rector\Array_\CallableThisArrayToAnonymousFunctionRector;
use Rector\CodeQuality\Rector\Assign\CombinedAssignRector;
use Rector\CodeQuality\Rector\Assign\SplitListAssignToSeparateLineRector;
use Rector\CodeQuality\Rector\BinaryOp\InlineIfToExplicitIfRector;
use Rector\CodeQuality\Rector\BinaryOp\SimplifyDeMorganBinaryRector;
use Rector\CodeQuality\Rector\BooleanAnd\SimplifyEmptyArrayCheckRector;
use Rector\CodeQuality\Rector\Catch_\ThrowWithPreviousExceptionRector;
use Rector\CodeQuality\Rector\Class_\CompleteDynamicPropertiesRector;
use Rector\CodeQuality\Rector\Concat\JoinStringConcatRector;
use Rector\CodeQuality\Rector\Equal\UseIdenticalOverEqualWithSameTypeRector;
use Rector\CodeQuality\Rector\For_\ForRepeatedCountToOwnVariableRector;
use Rector\CodeQuality\Rector\For_\ForToForeachRector;
use Rector\CodeQuality\Rector\Foreach_\ForeachItemsAssignToEmptyArrayToAssignRector;
use Rector\CodeQuality\Rector\Foreach_\ForeachToInArrayRector;
use Rector\CodeQuality\Rector\Foreach_\SimplifyForeachToArrayFilterRector;
use Rector\CodeQuality\Rector\Foreach_\SimplifyForeachToCoalescingRector;
use Rector\CodeQuality\Rector\Foreach_\UnusedForeachValueToArrayKeysRector;
use Rector\CodeQuality\Rector\FuncCall\AddPregQuoteDelimiterRector;
use Rector\CodeQuality\Rector\FuncCall\ArrayKeysAndInArrayToArrayKeyExistsRector;
use Rector\CodeQuality\Rector\FuncCall\ArrayMergeOfNonArraysToSimpleArrayRector;
use Rector\CodeQuality\Rector\FuncCall\ChangeArrayPushToArrayAssignRector;
use Rector\CodeQuality\Rector\FuncCall\CompactToVariablesRector;
use Rector\CodeQuality\Rector\FuncCall\InArrayAndArrayKeysToArrayKeyExistsRector;
use Rector\CodeQuality\Rector\FuncCall\IntvalToTypeCastRector;
use Rector\CodeQuality\Rector\FuncCall\IsAWithStringWithThirdArgumentRector;
use Rector\CodeQuality\Rector\FuncCall\RemoveSoleValueSprintfRector;
use Rector\CodeQuality\Rector\FuncCall\SimplifyFuncGetArgsCountRector;
use Rector\CodeQuality\Rector\FuncCall\SimplifyInArrayValuesRector;
use Rector\CodeQuality\Rector\FuncCall\SimplifyRegexPatternRector;
use Rector\CodeQuality\Rector\FuncCall\SimplifyStrposLowerRector;
use Rector\CodeQuality\Rector\FuncCall\SingleInArrayToCompareRector;
use Rector\CodeQuality\Rector\FuncCall\StrlenZeroToIdenticalEmptyStringRector;
use Rector\CodeQuality\Rector\Identical\BooleanNotIdenticalToNotIdenticalRector;
use Rector\CodeQuality\Rector\Identical\GetClassToInstanceOfRector;
use Rector\CodeQuality\Rector\Identical\SimplifyArraySearchRector;
use Rector\CodeQuality\Rector\Identical\SimplifyBoolIdenticalTrueRector;
use Rector\CodeQuality\Rector\Identical\SimplifyConditionsRector;
use Rector\CodeQuality\Rector\If_\CombineIfRector;
use Rector\CodeQuality\Rector\If_\ConsecutiveNullCompareReturnsToNullCoalesceQueueRector;
use Rector\CodeQuality\Rector\If_\ExplicitBoolCompareRector;
use Rector\CodeQuality\Rector\If_\RemoveAlwaysTrueConditionSetInConstructorRector;
use Rector\CodeQuality\Rector\If_\ShortenElseIfRector;
use Rector\CodeQuality\Rector\If_\SimplifyIfElseToTernaryRector;
use Rector\CodeQuality\Rector\If_\SimplifyIfIssetToNullCoalescingRector;
use Rector\CodeQuality\Rector\If_\SimplifyIfNotNullReturnRector;
use Rector\CodeQuality\Rector\If_\SimplifyIfReturnBoolRector;
use Rector\CodeQuality\Rector\Include_\AbsolutizeRequireAndIncludePathRector;
use Rector\CodeQuality\Rector\LogicalAnd\AndAssignsToSeparateLinesRector;
use Rector\CodeQuality\Rector\Return_\SimplifyUselessVariableRector;
use Rector\CodeQuality\Rector\Ternary\ArrayKeyExistsTernaryThenValueToCoalescingRector;
use Rector\CodeQuality\Rector\Ternary\SimplifyDuplicatedTernaryRector;
use Rector\CodeQuality\Rector\Ternary\SimplifyTautologyTernaryRector;
use Rector\CodeQuality\Rector\Ternary\UnnecessaryTernaryExpressionRector;
use Rector\Core\Configuration\Option;
use Rector\DeadCode\Rector\Array_\RemoveDuplicatedArrayKeyRector;
use Rector\DeadCode\Rector\Assign\RemoveAssignOfVoidReturnFunctionRector;
use Rector\DeadCode\Rector\Assign\RemoveDoubleAssignRector;
use Rector\DeadCode\Rector\Assign\RemoveUnusedVariableAssignRector;
use Rector\DeadCode\Rector\BooleanAnd\RemoveAndTrueRector;
use Rector\DeadCode\Rector\Class_\RemoveSetterOnlyPropertyAndMethodCallRector;
use Rector\DeadCode\Rector\Class_\RemoveUnusedClassesRector;
use Rector\DeadCode\Rector\Class_\RemoveUnusedDoctrineEntityMethodAndPropertyRector;
use Rector\DeadCode\Rector\ClassConst\RemoveUnusedClassConstantRector;
use Rector\DeadCode\Rector\ClassConst\RemoveUnusedPrivateConstantRector;
use Rector\DeadCode\Rector\ClassMethod\RemoveDeadConstructorRector;
use Rector\DeadCode\Rector\ClassMethod\RemoveDeadRecursiveClassMethodRector;
use Rector\DeadCode\Rector\ClassMethod\RemoveDelegatingParentCallRector;
use Rector\DeadCode\Rector\ClassMethod\RemoveEmptyClassMethodRector;
use Rector\DeadCode\Rector\ClassMethod\RemoveOverriddenValuesRector;
use Rector\DeadCode\Rector\ClassMethod\RemoveUnusedParameterRector;
use Rector\DeadCode\Rector\ClassMethod\RemoveUnusedPrivateMethodRector;
use Rector\DeadCode\Rector\Concat\RemoveConcatAutocastRector;
use Rector\DeadCode\Rector\Expression\SimplifyMirrorAssignRector;
use Rector\DeadCode\Rector\For_\RemoveDeadIfForeachForRector;
use Rector\DeadCode\Rector\Foreach_\RemoveUnusedForeachKeyRector;
use Rector\DeadCode\Rector\Function_\RemoveUnusedFunctionRector;
use Rector\DeadCode\Rector\FunctionLike\RemoveCodeAfterReturnRector;
use Rector\DeadCode\Rector\FunctionLike\RemoveDeadReturnRector;
use Rector\DeadCode\Rector\FunctionLike\RemoveDuplicatedIfReturnRector;
use Rector\DeadCode\Rector\If_\RemoveUnusedNonEmptyArrayBeforeForeachRector;
use Rector\DeadCode\Rector\If_\SimplifyIfElseWithSameContentRector;
use Rector\DeadCode\Rector\Instanceof_\RemoveDuplicatedInstanceOfRector;
use Rector\DeadCode\Rector\MethodCall\RemoveDefaultArgumentValueRector;
use Rector\DeadCode\Rector\Property\RemoveNullPropertyInitializationRector;
use Rector\DeadCode\Rector\Property\RemoveUnusedPrivatePropertyRector;
use Rector\DeadCode\Rector\StaticCall\RemoveParentCallWithoutParentRector;
use Rector\DeadCode\Rector\Stmt\RemoveDeadStmtRector;
use Rector\DeadCode\Rector\Stmt\RemoveUnreachableStatementRector;
use Rector\DeadCode\Rector\Switch_\RemoveDuplicatedCaseInSwitchRector;
use Rector\DeadCode\Rector\Ternary\TernaryToBooleanOrFalseToBooleanAndRector;
use Rector\DeadCode\Rector\TryCatch\RemoveDeadTryCatchRector;
use Rector\Naming\Rector\Class_\RenamePropertyToMatchTypeRector;
use Rector\Order\Rector\Class_\OrderPublicInterfaceMethodRector;
use Rector\Php71\Rector\BinaryOp\BinaryOpBetweenNumberAndStringRector;
use Rector\Php71\Rector\BinaryOp\IsIterableRector;
use Rector\Php71\Rector\FuncCall\CountOnNullRector;
use Rector\Php71\Rector\FuncCall\RemoveExtraParametersRector;
use Rector\Php71\Rector\List_\ListToArrayDestructRector;
use Rector\Php71\Rector\TryCatch\MultiExceptionCatchRector;
use Rector\Php72\Rector\ConstFetch\BarewordStringRector;
use Rector\Php72\Rector\Each\ListEachRector;
use Rector\Php72\Rector\Each\WhileEachToForeachRector;
use Rector\Php72\Rector\FuncCall\CreateFunctionToAnonymousFunctionRector;
use Rector\Php72\Rector\FuncCall\GetClassOnNullRector;
use Rector\Php72\Rector\FuncCall\IsObjectOnIncompleteClassRector;
use Rector\Php72\Rector\FuncCall\ParseStrWithResultArgumentRector;
use Rector\Php72\Rector\FuncCall\StringifyDefineRector;
use Rector\Php72\Rector\FuncCall\StringsAssertNakedRector;
use Rector\Php72\Rector\Unset_\UnsetCastRector;
use Rector\Php73\Rector\BinaryOp\IsCountableRector;
use Rector\Php73\Rector\ConstFetch\SensitiveConstantNameRector;
use Rector\Php73\Rector\FuncCall\ArrayKeyFirstLastRector;
use Rector\Php73\Rector\FuncCall\JsonThrowOnErrorRector;
use Rector\Php73\Rector\FuncCall\RegexDashEscapeRector;
use Rector\Php73\Rector\FuncCall\RemoveMissingCompactVariableRector;
use Rector\Php73\Rector\FuncCall\SensitiveDefineRector;
use Rector\Php73\Rector\FuncCall\StringifyStrNeedlesRector;
use Rector\Php73\Rector\String_\SensitiveHereNowDocRector;
use Rector\Php74\Rector\Assign\NullCoalescingOperatorRector;
use Rector\Php74\Rector\Closure\ClosureToArrowFunctionRector;
use Rector\Php74\Rector\Double\RealToFloatTypeCastRector;
use Rector\Php74\Rector\FuncCall\ArrayKeyExistsOnPropertyRector;
use Rector\Php74\Rector\FuncCall\ArraySpreadInsteadOfArrayMergeRector;
use Rector\Php74\Rector\FuncCall\FilterVarToAddSlashesRector;
use Rector\Php74\Rector\FuncCall\GetCalledClassToStaticClassRector;
use Rector\Php74\Rector\FuncCall\MbStrrposEncodingArgumentPositionRector;
use Rector\Php74\Rector\Function_\ReservedFnFunctionRector;
use Rector\Php74\Rector\LNumber\AddLiteralSeparatorToNumberRector;
use Rector\Php74\Rector\MagicConstClass\ClassConstantToSelfClassRector;
use Rector\Php74\Rector\MethodCall\ChangeReflectionTypeToStringToGetNameRector;
use Rector\Php74\Rector\Property\RestoreDefaultNullToNullableTypePropertyRector;
use Rector\Php74\Rector\Property\TypedPropertyRector;
use Rector\Php74\Rector\StaticCall\ExportToReflectionFunctionRector;
use Rector\PHPUnit\Rector\ClassMethod\RemoveEmptyTestMethodRector;
use Rector\SOLID\Rector\Class_\FinalizeClassesWithoutChildrenRector;
use Rector\SOLID\Rector\Class_\MakeUnusedClassesWithChildrenAbstractRector;
use Rector\SOLID\Rector\Class_\RepeatedLiteralToClassConstantRector;
use Rector\SOLID\Rector\ClassMethod\ChangeReadOnlyVariableWithDefaultValueToConstantRector;
use Rector\SOLID\Rector\ClassMethod\UseInterfaceOverImplementationInConstructorRector;
use Rector\SOLID\Rector\Foreach_\ChangeNestedForeachIfsToEarlyContinueRector;
use Rector\SOLID\Rector\If_\ChangeIfElseValueAssignToEarlyReturnRector;
use Rector\SOLID\Rector\If_\ChangeNestedIfsToEarlyReturnRector;
use Rector\SOLID\Rector\If_\RemoveAlwaysElseRector;
use Rector\SOLID\Rector\Property\AddFalseDefaultToBoolPropertyRector;
use Rector\SOLID\Rector\Property\ChangeReadOnlyPropertyWithDefaultValueToConstantRector;
use Rector\TypeDeclaration\Rector\Closure\AddClosureReturnTypeRector;
use Rector\TypeDeclaration\Rector\FunctionLike\ParamTypeDeclarationRector;
use Rector\TypeDeclaration\Rector\FunctionLike\ReturnTypeDeclarationRector;
use Symfony\Component\DependencyInjection\Loader\Configurator\ContainerConfigurator;

return static function (ContainerConfigurator $containerConfigurator): void {
    $parameters = $containerConfigurator->parameters();

    $parameters->set(Option::AUTO_IMPORT_NAMES, true);
    $parameters->set(Option::IMPORT_DOC_BLOCKS, false);
    $parameters->set(Option::IMPORT_SHORT_CLASSES, false);
    $parameters->set(Option::PATHS, [__DIR__ . '/app']);
    $parameters->set(Option::PHP_VERSION_FEATURES, '7.4');
    $parameters->set(Option::SAFE_TYPES, true);

    $services = $containerConfigurator->services();

    $services->set(AbsolutizeRequireAndIncludePathRector::class);
    $services->set(AddClosureReturnTypeRector::class);
    $services->set(AddFalseDefaultToBoolPropertyRector::class);
    $services->set(AddLiteralSeparatorToNumberRector::class);
    $services->set(AddPregQuoteDelimiterRector::class);
    $services->set(AndAssignsToSeparateLinesRector::class);
    $services->set(ArrayKeyExistsOnPropertyRector::class);
    $services->set(ArrayKeyExistsTernaryThenValueToCoalescingRector::class);
    $services->set(ArrayKeyFirstLastRector::class);
    $services->set(ArrayKeysAndInArrayToArrayKeyExistsRector::class);
    $services->set(ArrayMergeOfNonArraysToSimpleArrayRector::class);
    $services->set(ArraySpreadInsteadOfArrayMergeRector::class);
    $services->set(BarewordStringRector::class);
    $services->set(BinaryOpBetweenNumberAndStringRector::class);
    $services->set(BooleanNotIdenticalToNotIdenticalRector::class);
    $services->set(CallableThisArrayToAnonymousFunctionRector::class);
    $services->set(ChangeArrayPushToArrayAssignRector::class);
    $services->set(ChangeIfElseValueAssignToEarlyReturnRector::class);
    $services->set(ChangeNestedForeachIfsToEarlyContinueRector::class);
    $services->set(ChangeNestedIfsToEarlyReturnRector::class);
    $services->set(ChangeReadOnlyPropertyWithDefaultValueToConstantRector::class);
    $services->set(ChangeReadOnlyVariableWithDefaultValueToConstantRector::class);
    $services->set(ChangeReflectionTypeToStringToGetNameRector::class);
    $services->set(ClassConstantToSelfClassRector::class);
    $services->set(ClosureToArrowFunctionRector::class);
    $services->set(CombineIfRector::class);
    $services->set(CombinedAssignRector::class);
    $services->set(CompactToVariablesRector::class);
    $services->set(CompleteDynamicPropertiesRector::class);
    $services->set(ConsecutiveNullCompareReturnsToNullCoalesceQueueRector::class);
    $services->set(CountOnNullRector::class);
    $services->set(CreateFunctionToAnonymousFunctionRector::class);
    $services->set(ExplicitBoolCompareRector::class);
    $services->set(ExportToReflectionFunctionRector::class);
    $services->set(FilterVarToAddSlashesRector::class);
    $services->set(FinalizeClassesWithoutChildrenRector::class);
    $services->set(ForRepeatedCountToOwnVariableRector::class);
    $services->set(ForToForeachRector::class);
    $services->set(ForeachItemsAssignToEmptyArrayToAssignRector::class);
    $services->set(ForeachToInArrayRector::class);
    $services->set(GetCalledClassToStaticClassRector::class);
    $services->set(GetClassOnNullRector::class);
    $services->set(GetClassToInstanceOfRector::class);
    $services->set(InArrayAndArrayKeysToArrayKeyExistsRector::class);
    $services->set(InlineIfToExplicitIfRector::class);
    $services->set(IntvalToTypeCastRector::class);
    $services->set(IsAWithStringWithThirdArgumentRector::class);
    $services->set(IsCountableRector::class);
    $services->set(IsIterableRector::class);
    $services->set(IsObjectOnIncompleteClassRector::class);
    $services->set(JoinStringConcatRector::class);
    $services->set(JsonThrowOnErrorRector::class);
    $services->set(ListEachRector::class);
    $services->set(ListToArrayDestructRector::class);
    $services->set(MakeUnusedClassesWithChildrenAbstractRector::class);
    $services->set(MbStrrposEncodingArgumentPositionRector::class);
    $services->set(MultiExceptionCatchRector::class);
    $services->set(NullCoalescingOperatorRector::class);
    $services->set(OrderPublicInterfaceMethodRector::class);
    $services->set(ParamTypeDeclarationRector::class);
    $services->set(ParseStrWithResultArgumentRector::class);
    $services->set(RealToFloatTypeCastRector::class);
    $services->set(RegexDashEscapeRector::class);
    $services->set(RemoveAlwaysElseRector::class);
    $services->set(RemoveAlwaysTrueConditionSetInConstructorRector::class);
    $services->set(RemoveAndTrueRector::class);
    $services->set(RemoveAssignOfVoidReturnFunctionRector::class);
    $services->set(RemoveCodeAfterReturnRector::class);
    $services->set(RemoveConcatAutocastRector::class);
    $services->set(RemoveDeadConstructorRector::class);
    $services->set(RemoveDeadIfForeachForRector::class);
    $services->set(RemoveDeadRecursiveClassMethodRector::class);
    $services->set(RemoveDeadReturnRector::class);
    $services->set(RemoveDeadStmtRector::class);
    $services->set(RemoveDeadTryCatchRector::class);
    $services->set(RemoveDefaultArgumentValueRector::class);
    $services->set(RemoveDelegatingParentCallRector::class);
    $services->set(RemoveDoubleAssignRector::class);
    $services->set(RemoveDuplicatedArrayKeyRector::class);
    $services->set(RemoveDuplicatedCaseInSwitchRector::class);
    $services->set(RemoveDuplicatedIfReturnRector::class);
    $services->set(RemoveDuplicatedInstanceOfRector::class);
    $services->set(RemoveEmptyClassMethodRector::class);
    $services->set(RemoveEmptyTestMethodRector::class);
    $services->set(RemoveExtraParametersRector::class);
    $services->set(RemoveMissingCompactVariableRector::class);
    $services->set(RemoveNullPropertyInitializationRector::class);
    $services->set(RemoveOverriddenValuesRector::class);
    $services->set(RemoveParentCallWithoutParentRector::class);
    $services->set(RemoveSetterOnlyPropertyAndMethodCallRector::class);
    $services->set(RemoveSoleValueSprintfRector::class);
    $services->set(RemoveUnreachableStatementRector::class);
    $services->set(RemoveUnusedClassConstantRector::class);
    $services->set(RemoveUnusedClassesRector::class);
    $services->set(RemoveUnusedDoctrineEntityMethodAndPropertyRector::class);
    $services->set(RemoveUnusedForeachKeyRector::class);
    $services->set(RemoveUnusedFunctionRector::class);
    $services->set(RemoveUnusedNonEmptyArrayBeforeForeachRector::class);
    $services->set(RemoveUnusedParameterRector::class);
    $services->set(RemoveUnusedPrivateConstantRector::class);
    $services->set(RemoveUnusedPrivateMethodRector::class);
    $services->set(RemoveUnusedPrivatePropertyRector::class);
    $services->set(RemoveUnusedVariableAssignRector::class);
    $services->set(RenamePropertyToMatchTypeRector::class);
    $services->set(RepeatedLiteralToClassConstantRector::class);
    $services->set(ReservedFnFunctionRector::class);
    $services->set(RestoreDefaultNullToNullableTypePropertyRector::class);
    $services->set(ReturnTypeDeclarationRector::class);
    $services->set(SensitiveConstantNameRector::class);
    $services->set(SensitiveDefineRector::class);
    $services->set(SensitiveHereNowDocRector::class);
    $services->set(ShortenElseIfRector::class);
    $services->set(SimplifyArraySearchRector::class);
    $services->set(SimplifyBoolIdenticalTrueRector::class);
    $services->set(SimplifyConditionsRector::class);
    $services->set(SimplifyDeMorganBinaryRector::class);
    $services->set(SimplifyDuplicatedTernaryRector::class);
    $services->set(SimplifyEmptyArrayCheckRector::class);
    $services->set(SimplifyForeachToArrayFilterRector::class);
    $services->set(SimplifyForeachToCoalescingRector::class);
    $services->set(SimplifyFuncGetArgsCountRector::class);
    $services->set(SimplifyIfElseToTernaryRector::class);
    $services->set(SimplifyIfElseWithSameContentRector::class);
    $services->set(SimplifyIfIssetToNullCoalescingRector::class);
    $services->set(SimplifyIfNotNullReturnRector::class);
    $services->set(SimplifyIfReturnBoolRector::class);
    $services->set(SimplifyInArrayValuesRector::class);
    $services->set(SimplifyMirrorAssignRector::class);
    $services->set(SimplifyRegexPatternRector::class);
    $services->set(SimplifyStrposLowerRector::class);
    $services->set(SimplifyTautologyTernaryRector::class);
    $services->set(SimplifyUselessVariableRector::class);
    $services->set(SingleInArrayToCompareRector::class);
    $services->set(SplitListAssignToSeparateLineRector::class);
    $services->set(StringifyDefineRector::class);
    $services->set(StringifyStrNeedlesRector::class);
    $services->set(StringsAssertNakedRector::class);
    $services->set(StrlenZeroToIdenticalEmptyStringRector::class);
    $services->set(TernaryToBooleanOrFalseToBooleanAndRector::class);
    $services->set(ThrowWithPreviousExceptionRector::class);
    $services->set(TypedPropertyRector::class);
    $services->set(UnnecessaryTernaryExpressionRector::class);
    $services->set(UnsetCastRector::class);
    $services->set(UnusedForeachValueToArrayKeysRector::class);
    $services->set(UseIdenticalOverEqualWithSameTypeRector::class);
    $services->set(UseInterfaceOverImplementationInConstructorRector::class);
    $services->set(WhileEachToForeachRector::class);
};
